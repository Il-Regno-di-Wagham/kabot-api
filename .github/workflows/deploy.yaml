name: Deploy

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

jobs:
  deploy_on_docker:
    name: Deploy
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Get current version (last tag)
        id: version
        run: echo "VERSION=$(git tag --sort=taggerdate | tail -1)" >> $GITHUB_OUTPUT

      - name: Creation new version (Major) 🏷️
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        id: bump_version_major
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.VERSION }}
          version-fragment: 'major'

      - name: Update major version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        run: echo "NEW_VERSION=${{ steps.bump_version_major.outputs.next-version }}" >> $GITHUB_ENV

      - name: Creation new version (Minor) 🏷️
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        id: bump_version_minor
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.VERSION }}
          version-fragment: 'feature'

      - name: Update minor version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        run: echo "NEW_VERSION=${{ steps.bump_version_minor.outputs.next-version }}" >> $GITHUB_ENV

      - name: Creation new version (Patch) 🏷️
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        id: bump_version_patch
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.VERSION }}
          version-fragment: 'bug'

      - name: Update patch version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        run: echo "NEW_VERSION=${{ steps.bump_version_patch.outputs.next-version }}" >> $GITHUB_ENV

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ github.event.pull_request.body }}
          tag: ${{ steps.new-version.outputs.NEW_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}

