name: Deploy

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

jobs:
  deploy_on_docker:
    name: Deploy
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Test
        run: echo ${{ steps.previoustag.outputs.tag }}

      - name: Get next versions
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: Test 2
        run: | 
          echo ${{ steps.semvers.outputs.patch }}
          echo ${{ steps.semvers.outputs.minor }}
          echo ${{ steps.semvers.outputs.major }}

      - name: Update major version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        run: echo "NEW_VERSION=${{ steps.semvers.outputs.major }}" >> $GITHUB_ENV

      - name: Update minor version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        run: echo "NEW_VERSION=${{ steps.semvers.outputs.minor }}" >> $GITHUB_ENV

      - name: Update patch version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        run: echo "NEW_VERSION=${{ steps.semvers.outputs.patch }}" >> $GITHUB_ENV

      #- name: Upload Release
      #  uses: ncipollo/release-action@v1
      #  with:
      #    body: ${{ github.event.pull_request.body }}
      #    tag: ${{ steps.new-version.outputs.NEW_VERSION }}
      #    token: ${{ secrets.GITHUB_TOKEN }}

